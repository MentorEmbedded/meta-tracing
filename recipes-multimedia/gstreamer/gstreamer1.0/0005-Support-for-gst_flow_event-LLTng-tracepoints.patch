From 8bd062c758b1115f777a01e6f3e96b96fe747b35 Mon Sep 17 00:00:00 2001
From: Arulpandiyan Vadivel <arulpandiyan_vadivel@mentor.com>
Date: Fri, 24 Jul 2020 21:10:25 +0530
Subject: [PATCH 05/11] Support for gst_flow_event LLTng tracepoints.

The gst_flow_event tracepoints trace the properties of events sent through the gstreamer pipeline.
This replaces gst_flow_data tracepoints for event data.

The initial support for this kind of tracepoints includes calling appropriate primitives
when the data is passed through the pipeline elements, in the following APIs:

   gst_pad_push_event()
   gst_pad_send_event()

The tracepoints are invoked just before the gst_flow tracepoints.

At this stage, only minimal data is stored for each tracepoint:

    -- a unique integer ID of the invoking thread;
    -- the value of the pointer to the event.
    -- the type of event.
---
 gst/gst_tracepoints.h | 11 +++++++++++
 gst/gstpad.c          |  1 +
 2 files changed, 12 insertions(+)

diff --git a/gst/gst_tracepoints.h b/gst/gst_tracepoints.h
index ecbfba0..ea9b854 100644
--- a/gst/gst_tracepoints.h
+++ b/gst/gst_tracepoints.h
@@ -59,6 +59,7 @@ typedef enum GstFlowTracepointDataType {
 #define ctf_gst_tracepoint_type_field(name, type) ctf_integer (guint8, name, (guint8) (type))
 #define ctf_gst_tracepoint_kind_field(name, kind) ctf_integer (guint8, name, (guint8) (kind))
 #define ctf_gst_data_type_field(name, type) ctf_integer (guint8, name, (guint8) (type))
+#define ctf_gst_event_type_field(name, event) ctf_integer (gint, name, (gint) (event->type))
 
 #endif /* _GST_TRACEPOINTS_H */
 
@@ -96,6 +97,12 @@ GST_TRACEPOINT_EVENT (gst_flow_data,
                                  ctf_gst_thread_id_field (thread_id)
                                  ctf_gst_data_type_field (data_type, ((trace_is_on ? (*trace_is_on = 1) : 0), data_type))))
 
+GST_TRACEPOINT_EVENT (gst_flow_event,
+                      TP_ARGS (GstEvent *, event),
+                      TP_FIELDS (ctf_gst_data_field (event, event)
+                                 ctf_gst_thread_id_field (thread_id)
+                                 ctf_gst_event_type_field (event_type, event)))
+
 #endif /* _GST_TRACEPOINTS_H */
 
 #include <lttng/tracepoint-event.h>
@@ -141,6 +148,9 @@ GST_TRACEPOINT_EVENT (gst_flow_data,
 #define GST_FLOW_TRACEPOINT_BUFFER(buffer) \
   GST_TRACEPOINT (gst_flow_data, buffer, GST_TRACEPOINT_DATA_TYPE_BUFFER, NULL)
 
+#define GST_FLOW_TRACEPOINT_EVENT(event) \
+  GST_TRACEPOINT (gst_flow_event, event)
+
 #define GST_FLOW_TRACEPOINT_DATA(data, is_buffer)                       \
     do {                                                                \
       int trace_is_on = 0;                                              \
@@ -174,6 +184,7 @@ GST_TRACEPOINT_EVENT (gst_flow_data,
 #define GST_FLOW_TRACEPOINT_SEND_EVENT_ERROR(pad)
 #define GST_FLOW_TRACEPOINT_SEND_EVENT_DROPPED(pad)
 #define GST_FLOW_TRACEPOINT_BUFFER(buffer)
+#define GST_FLOW_TRACEPOINT_EVENT(event)
 #define GST_FLOW_TRACEPOINT_DATA(data, is_buffer)
 #define GST_FLOW_TRACEPOINT_BUFFER_LIST(list)
 
diff --git a/gst/gstpad.c b/gst/gstpad.c
index 0afee8f..08e0160 100644
--- a/gst/gstpad.c
+++ b/gst/gstpad.c
@@ -5681,6 +5681,7 @@ gst_pad_send_event_unchecked (GstPad * pad, GstEvent * event,
   gint64 old_pad_offset;
 
   GST_OBJECT_LOCK (pad);
+  GST_FLOW_TRACEPOINT_EVENT (event);
   GST_FLOW_TRACEPOINT_SEND_EVENT_ENTER (pad, event);
 
   old_pad_offset = pad->offset;
-- 
2.25.1

