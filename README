                    Notes on using the meta-sourceryanalyzer layer

This repository contains a Yocto Project layer which provides a staging area
for various patches that are currently required for proper Sourcery Analyzer
agent operation.  Work on pushing these to their appropriate upstream projects
is ongoing, but this will allow Yocto users of Sourcery Analyzer to use this
functionality immediately.

This layer may be used on top of recent git clones of Yocto or MEL. At
this time the layer has only been tested on the Beagleboard-XM platform.


Using this layer with Yocto/Poky:
=================================

1. Clone the poky tree, and checkout the tag that you want to use.  Tested tags
   are denzil and 1.3_M2.final.  Please note that older versions may not work
   due to missing metadata.  Newer versions are untested.

   git clone git://git.yoctoproject.org/poky
   cd poky

   git checkout -b 1.3_M2.final 1.3_M2.final
   OR
   git checkout -b denzil denzil

2. Source the OE configure script:

   . ./oe-init-build-env

3. Modify conf/local.conf for your particular environment.  Uncomment the line
   "#MACHINE ?= "beagleboard". To add systemtap support to your filesystem 
   image, add the following line to the end of the
   file:

   IMAGE_INSTALL_append = " systemtap systemtap-uprobes"

   To add the dropbear SSH server to your image, add the following line as well:

   IMAGE_INSTALL_append = " dropbear"

   Make any other adjustments to the file as necessary for your configuration.

4. In conf/bblayers.conf add the path to this repository in the BBLAYERS
   variable.  E.g.:

   BBLAYERS ?= " \
  /path/to/meta-sourceryanalyzer \
  /path/to/poky/meta \
  /path/to/poky/meta-yocto \
  "
  
5. Build the minimal image

   bitbake core-image-minimal

The resulting images should now contain the patches in the
meta-sourceryanalyzer layer.


Using this layer with MEL:
===========================

1. Follow the MEL documentation to configure MEL for the beagleboard, adding
   "-l /path/to/meta-sourceryanalyzer" to the create-config.py command line.
   This option will automatically configure the build to include
   meta-sourceryanalyzer in the bblayers.conf file by adding sa-systemtap to
   bblayers.conf.

2. For systemtap support, add the following line to conf/local.conf:

   IMAGE_INSTALL_append = " systemtap systemtap-uprobes"

   Note that the MEL devel-image contains openssh as the default SSH server.
   Therefore, it is unnecessary to supply an SSH package here. Make any
   other adjustments to the file as necessary for your configuration.

3. Build the devel image:

   bitbake devel-image

The resulting images should now contain the patches in the
meta-sourceryanalyzer layer.
