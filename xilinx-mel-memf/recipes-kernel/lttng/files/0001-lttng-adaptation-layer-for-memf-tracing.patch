From 513e032d30deac889aad67c46bf9813c56949895 Mon Sep 17 00:00:00 2001
From: Fahad Arslan <Fahad_Arslan@mentor.com>
Date: Thu, 23 Jun 2016 12:51:20 +0500
Subject: [PATCH 1/2] lttng adaptation layer for memf tracing

Signed-off-by: Fahad Arslan <Fahad_Arslan@mentor.com>
---
 instrumentation/events/lttng-module/MEMF.h | 268 +++++++++++++++++++++++++++++
 probes/Makefile                            |   3 +
 probes/lttng-probe-MEMF.c                  |  24 +++
 3 files changed, 295 insertions(+)
 create mode 100644 instrumentation/events/lttng-module/MEMF.h
 create mode 100644 probes/lttng-probe-MEMF.c

Index: git/instrumentation/events/lttng-module/MEMF.h
===================================================================
--- /dev/null
+++ git/instrumentation/events/lttng-module/MEMF.h
@@ -0,0 +1,268 @@
+#undef TRACE_SYSTEM
+#define TRACE_SYSTEM MEMF
+
+#if !defined(_LTTNG_MEMF_H) || defined(TRACE_HEADER_MULTI_READ)
+#define _LTTNG_MEMF_H
+
+#include "../../../probes/lttng-tracepoint-event.h"
+#include <linux/tracepoint.h>
+
+LTTNG_TRACEPOINT_EVENT(MEMF_Remoteproc_Init,
+
+	TP_PROTO(long Control_Block_Address, char* Firmware_Name, unsigned int CPU_ID, int Status),
+
+	TP_ARGS(Control_Block_Address, Firmware_Name, CPU_ID, Status),
+
+	TP_FIELDS(
+		ctf_integer(long, Control_Block_Address, Control_Block_Address)
+		ctf_string(Firmware_Name, Firmware_Name)
+		ctf_integer(unsigned int, CPU_ID, CPU_ID)
+		ctf_integer(int, Status, Status)
+	)
+)
+
+LTTNG_TRACEPOINT_EVENT(MEMF_Remoteproc_State,
+
+	 TP_PROTO(long Control_Block_Address, unsigned int State, int Status),
+
+	 TP_ARGS(Control_Block_Address, State, Status),
+
+	 TP_FIELDS(
+		ctf_integer(long, Control_Block_Address, Control_Block_Address)
+		ctf_integer(unsigned int, State, State)
+		ctf_integer(int, Status, Status)
+        )
+)
+
+LTTNG_TRACEPOINT_EVENT(MEMF_Remoteproc_DeInit,
+
+	TP_PROTO(long Control_Block_Address, int Status),
+
+	TP_ARGS(Control_Block_Address, Status),
+
+	TP_FIELDS(
+		ctf_integer(long, Control_Block_Address, Control_Block_Address)
+		ctf_integer(int, Status, Status)
+	)
+)
+
+LTTNG_TRACEPOINT_EVENT(MEMF_Remoteproc_Rsc_Init,
+
+	TP_PROTO(long Control_Block_Address, unsigned int CPU_ID, int Status),
+
+	TP_ARGS(Control_Block_Address, CPU_ID, Status),
+
+	TP_FIELDS(
+		ctf_integer(long, Control_Block_Address, Control_Block_Address)
+		ctf_integer(unsigned int, CPU_ID, CPU_ID)
+		ctf_integer(int, Status, Status)
+	)
+)
+
+LTTNG_TRACEPOINT_EVENT(MEMF_Remoteproc_Rsc_Deinit,
+
+	TP_PROTO(long Control_Block_Address, int Status),
+
+	TP_ARGS(Control_Block_Address, Status),
+
+	TP_FIELDS(
+		ctf_integer(long, Control_Block_Address, Control_Block_Address)
+		ctf_integer(int, Status, Status)
+	)
+)
+
+LTTNG_TRACEPOINT_EVENT(MEMF_RPMsg_Init,
+
+	TP_PROTO(long RPMsg_Control_Block_Address, unsigned int CPU_ID, unsigned int Role, int Status),
+
+	TP_ARGS(RPMsg_Control_Block_Address, CPU_ID, Role, Status),
+
+	TP_FIELDS(
+		ctf_integer(long, RPMsg_Control_Block_Address, RPMsg_Control_Block_Address)
+		ctf_integer(unsigned int, CPU_ID, CPU_ID)
+		ctf_integer(unsigned int, Role, Role)
+		ctf_integer(int, Status, Status)
+	)
+)
+
+LTTNG_TRACEPOINT_EVENT(MEMF_RPMsg_DeInit,
+
+	TP_PROTO(long RPMsg_Control_Block_Address, int Status),
+
+	TP_ARGS(RPMsg_Control_Block_Address, Status),
+
+	TP_FIELDS(
+		ctf_integer(long, RPMsg_Control_Block_Address, RPMsg_Control_Block_Address)
+		ctf_integer(int, Status, Status)
+	)
+)
+
+LTTNG_TRACEPOINT_EVENT(MEMF_RPMsg_Channel_Create,
+
+	TP_PROTO(long RPMsg_Control_Block_Address,
+		long Channel_Control_Block_Address,
+		char *Name,
+		unsigned int Source_Address,
+		unsigned int Destination_Address,
+		int Status),
+
+	TP_ARGS(RPMsg_Control_Block_Address,
+		Channel_Control_Block_Address,
+		Name,
+		Source_Address,
+		Destination_Address,
+		Status),
+
+	TP_FIELDS(
+		ctf_integer(long, RPMsg_Control_Block_Address, RPMsg_Control_Block_Address)
+		ctf_integer(long, Channel_Control_Block_Address, Channel_Control_Block_Address)
+		ctf_string(Name, Name)
+		ctf_integer(unsigned int, Source_Address, Source_Address)
+		ctf_integer(unsigned int, Destination_Address, Destination_Address)
+		ctf_integer(int, Status, Status)
+	 )
+)
+
+LTTNG_TRACEPOINT_EVENT(MEMF_RPMsg_Channel_Delete,
+
+	TP_PROTO(long Channel_Control_Block_Address,
+		int Status),
+
+	TP_ARGS(Channel_Control_Block_Address,
+		Status),
+
+	TP_FIELDS(
+		ctf_integer(long, Channel_Control_Block_Address, Channel_Control_Block_Address)
+		ctf_integer(int, Status, Status)
+	)
+)
+
+LTTNG_TRACEPOINT_EVENT(MEMF_RPMsg_Ept_Create,
+
+	TP_PROTO(long RPMsg_Control_Block_Address,
+		long EPT_Control_Block_Address,
+		unsigned int Address,
+		int Status),
+
+	TP_ARGS(RPMsg_Control_Block_Address,
+		EPT_Control_Block_Address,
+		Address,
+		Status),
+
+	TP_FIELDS(
+		ctf_integer(long, RPMsg_Control_Block_Address, RPMsg_Control_Block_Address)
+		ctf_integer(long, EPT_Control_Block_Address, EPT_Control_Block_Address)
+		ctf_integer(unsigned int, Address, Address)
+		ctf_integer(int, Status, Status)
+	)
+)
+
+LTTNG_TRACEPOINT_EVENT(MEMF_RPMsg_Ept_Delete,
+
+	TP_PROTO(long EPT_Control_Block_Address,
+		int Status),
+
+	TP_ARGS(EPT_Control_Block_Address,
+		Status),
+
+	TP_FIELDS(
+		ctf_integer(long, EPT_Control_Block_Address, EPT_Control_Block_Address)
+		ctf_integer(int, Status, Status)
+	 )
+)
+
+LTTNG_TRACEPOINT_EVENT(MEMF_RPMsg_Tx_Start,
+
+	TP_PROTO(long Channel_Control_Block_Address,
+		unsigned int Source_Address,
+		unsigned int Destination_Address,
+		unsigned int Size,
+		int Status),
+
+	TP_ARGS(Channel_Control_Block_Address,
+		Source_Address,
+		Destination_Address,
+		Size,
+		Status),
+
+	TP_FIELDS(
+		ctf_integer(long, Channel_Control_Block_Address, Channel_Control_Block_Address)
+		ctf_integer(unsigned int, Source_Address, Source_Address)
+		ctf_integer(unsigned int, Destination_Address, Destination_Address)
+		ctf_integer(unsigned int, Size, Size)
+		ctf_integer(int, Status, Status)
+	)
+)
+
+LTTNG_TRACEPOINT_EVENT(MEMF_RPMsg_Tx_Stop,
+
+	TP_PROTO(long Channel_Control_Block_Address,
+		unsigned int Source_Address,
+		unsigned int Destination_Address,
+		unsigned int Size,
+		int Status),
+
+	TP_ARGS(Channel_Control_Block_Address,
+		Source_Address,
+		Destination_Address,
+		Size,
+		Status),
+
+	TP_FIELDS(
+		ctf_integer(long, Channel_Control_Block_Address, Channel_Control_Block_Address)
+		ctf_integer(unsigned int, Source_Address, Source_Address)
+		ctf_integer(unsigned int, Destination_Address, Destination_Address)
+		ctf_integer(unsigned int, Size, Size)
+		ctf_integer(int, Status, Status)
+	)
+)
+
+LTTNG_TRACEPOINT_EVENT(MEMF_RPMsg_Rx_Start,
+
+	TP_PROTO(long RPMsg_Control_Block_Address,
+		unsigned int Source_Address,
+		unsigned int Destination_Address,
+		unsigned int Size,
+		int Status),
+
+	TP_ARGS(RPMsg_Control_Block_Address,
+		Source_Address,
+		Destination_Address,
+		Size,
+		Status),
+
+	TP_FIELDS(
+		ctf_integer(long, RPMsg_Control_Block_Address, RPMsg_Control_Block_Address)
+		ctf_integer(unsigned int, Source_Address, Source_Address)
+		ctf_integer(unsigned int, Destination_Address, Destination_Address)
+		ctf_integer(unsigned int, Size, Size)
+		ctf_integer(int, Status, Status)
+	)
+)
+
+LTTNG_TRACEPOINT_EVENT(MEMF_RPMsg_Rx_Stop,
+
+	TP_PROTO(long RPMsg_Control_Block_Address,
+		unsigned int Source_Address,
+		unsigned int Destination_Address,
+		unsigned int Size,
+		int Status),
+
+	TP_ARGS(RPMsg_Control_Block_Address,
+		Source_Address,
+		Destination_Address,
+		Size,
+		Status),
+
+	TP_FIELDS(
+		ctf_integer(long, RPMsg_Control_Block_Address, RPMsg_Control_Block_Address)
+		ctf_integer(unsigned int, Source_Address, Source_Address)
+		ctf_integer(unsigned int, Destination_Address, Destination_Address)
+		ctf_integer(unsigned int, Size, Size)
+		ctf_integer(int, Status, Status)
+	)
+)
+#endif /* LTTNG_MEMF_H */
+
+/* This part must be outside protection */
+#include "../../../probes/define_trace.h"
Index: git/probes/lttng-probe-MEMF.c
===================================================================
--- /dev/null
+++ git/probes/lttng-probe-MEMF.c
@@ -0,0 +1,24 @@
+#include <linux/module.h>
+#include "../lttng-tracer.h"
+
+/* Build time verification of mismatch between mainline TRACE_EVENT()
+ * arguments and LTTng adaptation layer LTTNG_TRACEPOINT_EVENT() arguments.
+ */
+#include <trace/events/MEMF.h>
+
+/* create LTTng tracepoint probes */
+#define LTTNG_PACKAGE_BUILD
+#define CREATE_TRACE_POINTS
+#define TRACE_INCLUDE_PATH ../instrumentation/events/lttng-module
+
+#include "../instrumentation/events/lttng-module/MEMF.h"
+
+MODULE_LICENSE("GPL and additional rights");
+MODULE_AUTHOR("Fahad Arslan <fahad_arslan@mentor.com>");
+MODULE_DESCRIPTION("LTTng MEMF probes");
+MODULE_VERSION(__stringify(LTTNG_MODULES_MAJOR_VERSION) "."
+    __stringify(LTTNG_MODULES_MINOR_VERSION) "."
+    __stringify(LTTNG_MODULES_PATCHLEVEL_VERSION)
+    LTTNG_MODULES_EXTRAVERSION);
+
+
Index: git/probes/Kbuild
===================================================================
--- git.orig/probes/Kbuild
+++ git/probes/Kbuild
@@ -261,4 +261,8 @@ ifneq ($(CONFIG_DYNAMIC_FTRACE),)
   obj-$(CONFIG_LTTNG) += lttng-ftrace.o
 endif # CONFIG_DYNAMIC_FTRACE
 
+ifneq ($(CONFIG_MEMF),)
+  obj-$(CONFIG_LTTNG) += lttng-probe-MEMF.o
+endif # CONFIG_MEMF
+
 # vim:syntax=make
