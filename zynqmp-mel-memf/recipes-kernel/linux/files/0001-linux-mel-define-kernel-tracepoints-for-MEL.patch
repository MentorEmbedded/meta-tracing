From 58a9ad7c5be4069a3133f2ae666a9f24d0984221 Mon Sep 17 00:00:00 2001
From: Ahsan Hussain <ahsan_hussain@mentor.com>
Date: Thu, 12 Apr 2018 16:49:12 +0500
Subject: [PATCH 1/3] linux-mel: define kernel tracepoints for MEL

Signed-off-by: Ahsan Hussain <ahsan_hussain@mentor.com>
---
 include/trace/events/MEMF.h            | 305 +++++++++++++++++++++++++++++++++
 include/trace/events/Synchronization.h |  45 +++++
 2 files changed, 350 insertions(+)
 create mode 100644 include/trace/events/MEMF.h
 create mode 100644 include/trace/events/Synchronization.h

diff --git a/include/trace/events/MEMF.h b/include/trace/events/MEMF.h
new file mode 100644
index 0000000..1168317
--- /dev/null
+++ b/include/trace/events/MEMF.h
@@ -0,0 +1,305 @@
+/* subsystem name is "MEMF" */
+#undef TRACE_SYSTEM
+#define TRACE_SYSTEM MEMF
+
+#if !defined(_TRACE_MEMF_H) || defined(TRACE_HEADER_MULTI_READ)
+#define _TRACE_MEMF_H
+
+#include <linux/tracepoint.h>
+
+TRACE_EVENT(
+    /* "memf" is the subsystem name, "Remoteproc_Init" is the event name */
+    MEMF_Remoteproc_Init,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long Control_Block_Address, char* Firmware_Name, unsigned int CPU_ID, int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(Control_Block_Address, Firmware_Name, CPU_ID, Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "MEMF" is the subsystem name, "Remoteproc_State" is the event name */
+    MEMF_Remoteproc_State,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long Control_Block_Address, unsigned int State, int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(Control_Block_Address, State, Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "MEMF" is the subsystem name, "Remoteproc_DeInit" is the event name */
+    MEMF_Remoteproc_DeInit,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long Control_Block_Address, int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(Control_Block_Address, Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "MEMF" is the subsystem name, "Remoteproc_Rsc_Init" is the event name */
+    MEMF_Remoteproc_Rsc_Init,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long Control_Block_Address, unsigned int CPU_ID, int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(Control_Block_Address, CPU_ID, Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "MEMF" is the subsystem name, "Remoteproc_Rsc_Deinit" is the event name */
+    MEMF_Remoteproc_Rsc_Deinit,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long Control_Block_Address, int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(Control_Block_Address, Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "MEMF" is the subsystem name, "RPMsg_Init" is the event name */
+    MEMF_RPMsg_Init,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long RPMsg_Control_Block_Address, unsigned int CPU_ID, unsigned int Role, int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(RPMsg_Control_Block_Address, CPU_ID, Role, Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "MEMF" is the subsystem name, "RPMsg_DeInit" is the event name */
+    MEMF_RPMsg_DeInit,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long RPMsg_Control_Block_Address, int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(RPMsg_Control_Block_Address, Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "MEMF" is the subsystem name, "RPMsg_Channel_Create" is the event name */
+    MEMF_RPMsg_Channel_Create,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long RPMsg_Control_Block_Address,
+                unsigned long Channel_Control_Block_Address,
+                char *Name,
+                unsigned int Source_Address,
+                unsigned int Destination_Address,
+                int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(RPMsg_Control_Block_Address,
+                Channel_Control_Block_Address,
+                Name,
+                Source_Address,
+                Destination_Address,
+                Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "MEMF" is the subsystem name, "RPMsg_Channel_Delete" is the event name */
+    MEMF_RPMsg_Channel_Delete,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long Channel_Control_Block_Address,
+                int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(Channel_Control_Block_Address,
+                Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "MEMF" is the subsystem name, "RPMsg_Ept_Create" is the event name */
+    MEMF_RPMsg_Ept_Create,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long RPMsg_Control_Block_Address,
+                unsigned long EPT_Control_Block_Address,
+                unsigned int Address,
+                int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(RPMsg_Control_Block_Address,
+                EPT_Control_Block_Address,
+                Address,
+                Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "MEMF" is the subsystem name, "RPMsg_Ept_Delete" is the event name */
+    MEMF_RPMsg_Ept_Delete,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long EPT_Control_Block_Address,
+                int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(EPT_Control_Block_Address,
+                Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "MEMF" is the subsystem name, "RPMsg_Tx_Start" is the event name */
+    MEMF_RPMsg_Tx_Start,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long Channel_Control_Block_Address,
+                unsigned int Source_Address,
+                unsigned int Destination_Address,
+                unsigned int Size,
+                int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(Channel_Control_Block_Address,
+                Source_Address,
+                Destination_Address,
+                Size,
+                Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "MEMF" is the subsystem name, "RPMsg_Tx_Stop" is the event name */
+    MEMF_RPMsg_Tx_Stop,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long Channel_Control_Block_Address,
+                unsigned int Source_Address,
+                unsigned int Destination_Address,
+                unsigned int Size,
+                int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(Channel_Control_Block_Address,
+                Source_Address,
+                Destination_Address,
+                Size,
+                Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "MEMF" is the subsystem name, "RPMsg_Rx_Start" is the event name */
+    MEMF_RPMsg_Rx_Start,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long RPMsg_Control_Block_Address,
+                unsigned int Source_Address,
+                unsigned int Destination_Address,
+                unsigned int Size,
+                int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(RPMsg_Control_Block_Address,
+                Source_Address,
+                Destination_Address,
+                Size,
+                Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "MEMF" is the subsystem name, "RPMsg_Rx_Stop" is the event name */
+    MEMF_RPMsg_Rx_Stop,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned long RPMsg_Control_Block_Address,
+                unsigned int Source_Address,
+                unsigned int Destination_Address,
+                unsigned int Size,
+                int Status),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(RPMsg_Control_Block_Address,
+                Source_Address,
+                Destination_Address,
+                Size,
+                Status),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+#endif
+
+/* this part must be outside protection */
+#include <trace/define_trace.h>
diff --git a/include/trace/events/Synchronization.h b/include/trace/events/Synchronization.h
new file mode 100644
index 0000000..df160b2
--- /dev/null
+++ b/include/trace/events/Synchronization.h
@@ -0,0 +1,45 @@
+/* subsystem name is "Synchronization" */
+#undef TRACE_SYSTEM
+#define TRACE_SYSTEM Synchronization
+
+#if !defined(_TRACE_SYNCHRONIZATION_H) || defined(TRACE_HEADER_MULTI_READ)
+#define _TRACE_SYNCHRONIZATION_H
+
+#include <linux/tracepoint.h>
+
+TRACE_EVENT(
+    /* "Synchronization" is the subsystem name, "TriggerSend" is the event name */
+    Synchronization_TriggerSend,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned int Priority, unsigned int CorrelationId, const char *Name),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(Priority, CorrelationId, Name),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+TRACE_EVENT(
+    /* "Synchronization" is the subsystem name, "TriggerReceive" is the event name */
+    Synchronization_TriggerReceive,
+
+    /* tracepoint function prototype */
+    TP_PROTO(unsigned int Priority, unsigned int CorrelationId, const char *Name),
+
+    /* arguments for this tracepoint */
+    TP_ARGS(Priority, CorrelationId, Name),
+
+    /* LTTng doesn't need those */
+    TP_STRUCT__entry(),
+    TP_fast_assign(),
+    TP_printk("", 0)
+);
+
+#endif
+
+/* this part must be outside protection */
+#include <trace/define_trace.h>
-- 
2.7.4

