From 3165c02d995cd29693324cae25f88706b28da0c4 Mon Sep 17 00:00:00 2001
From: Abdur Rehman <abdur_rehman@mentor.com>
Date: Mon, 13 Mar 2017 16:52:29 +0500
Subject: [PATCH 1/1] add traces to rpmsg_send_offchannel_raw_large()

Signed-off-by: Abdur Rehman <abdur_rehman@mentor.com>
---
 drivers/rpmsg/virtio_rpmsg_bus.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/drivers/rpmsg/virtio_rpmsg_bus.c b/drivers/rpmsg/virtio_rpmsg_bus.c
index 1c7ece6..c5ccaa1 100644
--- a/drivers/rpmsg/virtio_rpmsg_bus.c
+++ b/drivers/rpmsg/virtio_rpmsg_bus.c
@@ -1160,9 +1160,11 @@ int rpmsg_send_offchannel_raw_large(struct rpmsg_channel *rpdev, u32 src, u32 ds
 	/* bcasting isn't allowed */
 	if (src == RPMSG_ADDR_ANY || dst == RPMSG_ADDR_ANY) {
 		dev_err(dev, "invalid addr (src 0x%x, dst 0x%x)\n", src, dst);
+		trace_MEMF_RPMsg_Tx_Start(rpdev, src, dst, len, RPMSG_FAILURE);
 		return -EINVAL;
 	}
 
+	trace_MEMF_RPMsg_Tx_Start(rpdev, src, dst, len, RPMSG_SUCCESS);
 	if(!zc) {
 		/* Instantiate rpmsg buffer based on data size here.
 		 * Make sure to deinit it using rpmsg_release_buffer 
@@ -1172,12 +1174,14 @@ int rpmsg_send_offchannel_raw_large(struct rpmsg_channel *rpdev, u32 src, u32 ds
 		tx_buf = rpmsg_alloc();
 		if (!tx_buf) {
 			dev_err(dev, "Failed to create tx buffer \n");
+			trace_MEMF_RPMsg_Tx_Stop(rpdev, src, dst, len, RPMSG_FAILURE);
 			return -ENOMEM;
 		}
 		ret = rpmsg_init_tx_buf(rpdev, tx_buf, len);
 
 		if (ret && !wait) {
 			dev_err(dev, "Failed to create rpmsg tx buffer\n");
+			trace_MEMF_RPMsg_Tx_Stop(rpdev, src, dst, len, RPMSG_FAILURE);
 			return -ENOMEM;
 		}
 
@@ -1202,6 +1206,7 @@ int rpmsg_send_offchannel_raw_large(struct rpmsg_channel *rpdev, u32 src, u32 ds
 			/* timeout ? */
 			if (!err) {
 				dev_err(dev, "timeout waiting for a tx buffer\n");
+				trace_MEMF_RPMsg_Tx_Stop(rpdev, src, dst, len, RPMSG_FAILURE);
 				return -ERESTARTSYS;
 			}
 		}
@@ -1224,6 +1229,7 @@ int rpmsg_send_offchannel_raw_large(struct rpmsg_channel *rpdev, u32 src, u32 ds
 
 	if (!rp_hdr) {
 		dev_err(dev, "Unable to get rpmsg header buffer\n");
+		trace_MEMF_RPMsg_Tx_Stop(rpdev, src, dst, len, RPMSG_FAILURE);
 		return -ENOMEM;
 	}
 
@@ -1281,11 +1287,13 @@ int rpmsg_send_offchannel_raw_large(struct rpmsg_channel *rpdev, u32 src, u32 ds
 		 * this will wait for a buffer management overhaul.
 		 */
 		dev_err(dev, "virtqueue_add_outbuf failed: %d\n", err);
+		trace_MEMF_RPMsg_Tx_Stop(rpdev, src, dst, len, RPMSG_FAILURE);
 		goto out;
 	}
 
 	/* tell the remote processor it has a pending message to read */
 	virtqueue_kick(vrp->svq);
+	trace_MEMF_RPMsg_Tx_Stop(rpdev, src, dst, len, RPMSG_SUCCESS);
 out:
 	/* free-up the rpmsg tx buffer */
 	if (!zc) {
-- 
2.8.1

